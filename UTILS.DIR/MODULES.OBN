MODULE Modules;
IMPORT SYSTEM, Terminal;

CONST ASCIITAB  = 9;
TYPE ModName    = ARRAY 8 OF CHAR;
     ModDescPtr = POINTER TO ModuleDesc;
     ModuleDesc = RECORD
                    dependencies  : ARRAY 32 OF INTEGER;
                    link          : ModDescPtr;
                    name          : ModName;
                    reserved      : INTEGER;
                    version       : INTEGER;
                    procTable     : INTEGER;
                    flags         : BYTE;
                    nbOfVars      : BYTE;
                    reserved2     : BYTE;
                    nbDependencies: BYTE;
                  END;

VAR module: ModDescPtr;

PROCEDURE WriteHex(i: INTEGER);
  PROCEDURE WriteHexDigit(i: INTEGER);
  BEGIN
    IF i > 9
    THEN Terminal.Char(CHR(i-10+ORD('A')))
    ELSE Terminal.Char(CHR(i   +ORD('0')))
    END
  END WriteHexDigit;
BEGIN
  WriteHexDigit(i DIV 4096 MOD 16);
  WriteHexDigit(i DIV 256  MOD 16);
  WriteHexDigit(i DIV 16   MOD 16);
  WriteHexDigit(i          MOD 16);
END WriteHex;

BEGIN
  Terminal.String("Module name     Version");
  Terminal.Ln;
  module := SYSTEM.VAL(ModDescPtr, SYSTEM.ADR(module) - SYSTEM.SIZE(ModuleDesc));
  WHILE module # NIL DO
    Terminal.String(module.name);
    Terminal.String("       ");
    Terminal.Char  (CHR(ASCIITAB));
    WriteHex(module.version);
    Terminal.Ln;
    module := module.link;
  END
END Modules.
